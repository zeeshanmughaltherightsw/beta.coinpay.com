{"version":3,"file":"assets/js/recover-password.41e73e58.js","mappings":"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","sources":["webpack://cointopay/./src/views/ForgotPassword.vue","webpack://cointopay/./src/views/ForgotPassword.vue?1314"],"sourcesContent":["<template>\r\n  <auth-layout>\r\n    <div class=\"max-w-xl w-full space-y-4 rounded bg-white dark:bg-gray-800 dark:text-gray-400 shadow p-4\">\r\n      <h1 class=\"text-xl font-bold mb-4 text-center\">{{ translate('login.recover') }}</h1>\r\n      <form @submit.prevent=\"submit()\">\r\n        <div class=\"mb-2\">\r\n          <div class=\"flex items-center justify-between mb-1\">\r\n            <label>{{ translate('login.username') }}</label>\r\n            <div class=\"text-blue-500 text-sm\">{{ showError(errorBag, 'User') }}</div>\r\n          </div>\r\n          <input type=\"text\" autofocus v-model=\"form.User\" class=\"form-input w-full\" autocomplete=\"off\"/>\r\n        </div>\r\n        <div>\r\n          <vue-recaptcha ref=\"vueRecaptcha\" :siteKey=\"reCaptchaAPIKey\"\r\n                         size=\"normal\" @expire=\"recaptchaExpired\" :theme=\"mode\"\r\n                         @fail=\"recaptchaFailed\" @verify=\"recaptchaVerified\">\r\n          </vue-recaptcha>\r\n          <div class=\"text-red-500 text-sm\">{{ showError(errorBag, 'reCaptcha') }}</div>\r\n        </div>\r\n\r\n        <div class=\"mt-4\">\r\n          <j-button :disabled=\"isProcessing\" size=\"w-full\">\r\n            <div v-if=\"isProcessing\" class=\"mr-3\">\r\n              <icon :name=\"'spinner'\" classes=\"w-4 h-4 text-white\"></icon>\r\n            </div>\r\n            <span>{{ translate('login.recover') }}</span>\r\n          </j-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </auth-layout>\r\n</template>\r\n\r\n<script>\r\nimport AuthLayout from '@/components/layouts/AuthLayout'\r\nimport vueRecaptcha from 'vue3-recaptcha2'\r\nimport JButton from '@/templates/Button'\r\nimport Icon from '@/components/Icon'\r\nimport { computed, inject, onBeforeMount, reactive, ref, toRefs, watch } from 'vue'\r\nimport validator from '@/validator'\r\nimport { useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default {\r\n  name: 'ForgotPassword',\r\n  components: {\r\n    AuthLayout,\r\n    vueRecaptcha,\r\n    JButton,\r\n    Icon\r\n  },\r\n  setup () {\r\n    const vueRecaptcha = ref(null)\r\n\r\n    // Provides\r\n    const http = inject('http')\r\n    const toast = inject('toast')\r\n    const translate = inject('translate')\r\n    // Store\r\n    const store = useStore()\r\n    // Router\r\n    const router = useRouter()\r\n\r\n    const {\r\n      validate,\r\n      showError\r\n    } = validator()\r\n\r\n    const state = reactive({\r\n      reCaptchaAPIKey: process.env.VUE_APP_GOOGLE_reCAPTCHA_SITE_KEY,\r\n      form: {\r\n        User: '',\r\n        reCaptcha: '',\r\n        output: 'json'\r\n      },\r\n      errorBag: {},\r\n      rules: {\r\n        User: ['required'],\r\n        reCaptcha: ['required']\r\n      },\r\n      messages: {\r\n        User: {\r\n          required: 'Username is required'\r\n        },\r\n        reCaptcha: {\r\n          required: 'Verify you are not a robot'\r\n        }\r\n      },\r\n      isProcessing: false\r\n    })\r\n\r\n    // Computed\r\n    const mode = computed(() => store.state.mode)\r\n    const isLoggedIn = computed(() => store.state.isLoggedIn)\r\n\r\n    // Watch\r\n    watch(() => ({ ...state.form }),\r\n      (newVal, oldVal) => {\r\n        if (Object.keys(state.errorBag).length > 0) {\r\n          state.errorBag = validate(state.form, state.rules, state.messages)\r\n        }\r\n      })\r\n\r\n    // Methods\r\n    const apiBaseUrl = process.env.VUE_APP_API_URL\r\n    const recaptchaVerified = (response) => {\r\n      state.form.reCaptcha = response\r\n    }\r\n    const recaptchaExpired = () => {\r\n      vueRecaptcha.value.reset()\r\n      state.form.reCaptcha = ''\r\n    }\r\n    const recaptchaFailed = () => {\r\n    }\r\n    const submit = () => {\r\n      state.errorBag = validate(state.form, state.rules, state.messages)\r\n      if (Object.keys(state.errorBag).length === 0) {\r\n        state.isProcessing = true\r\n        let payload = state.form\r\n        payload = Object.assign(payload, {\r\n          'g-recaptcha-response': payload.reCaptcha\r\n        })\r\n        delete payload.reCaptcha\r\n\r\n        http.get(`${apiBaseUrl}/RecoverPassword`, {\r\n          params: payload\r\n        }).then(response => {\r\n          state.isProcessing = false\r\n          if (response.status === 200) {\r\n            if (response.data.status_code === 400) {\r\n              toast.error(response.data.reason)\r\n            } else {\r\n              // Reset google reCaptcha\r\n              toast.success(response.data.data[0])\r\n              // Redirect\r\n              router.push('/login')\r\n            }\r\n          }\r\n        }).catch(error => {\r\n          state.isProcessing = false\r\n          if (error.response) {\r\n            toast.error(error.response.data)\r\n          } else if (error.data && error.data.reason) {\r\n            toast.error(error.data.reason)\r\n          }\r\n          vueRecaptcha.value.reset()\r\n          state.form.reCaptcha = ''\r\n        })\r\n      }\r\n    }\r\n\r\n    onBeforeMount(() => {\r\n      if (isLoggedIn.value) {\r\n        const route = store.state.currentRoute\r\n        router.push(route)\r\n      }\r\n    })\r\n\r\n    return {\r\n      translate,\r\n      ...toRefs(state),\r\n      vueRecaptcha,\r\n      showError,\r\n      mode,\r\n      recaptchaVerified,\r\n      recaptchaExpired,\r\n      recaptchaFailed,\r\n      submit\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import { render } from \"./ForgotPassword.vue?vue&type=template&id=d76876a6\"\nimport script from \"./ForgotPassword.vue?vue&type=script&lang=js\"\nexport * from \"./ForgotPassword.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\TRS 37\\\\Desktop\\\\Zeeshan\\\\Cointopay\\\\cointopay.com.frontend.vuejs3.paymentfocus\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","key","render","_component_vue_recaptcha","_component_icon","_component_j_button","_component_auth_layout","_openBlock","_createBlock","default","_withCtx","_createElementVNode","_hoisted_1","$setup","onSubmit","_ctx","_withDirectives","type","autofocus","User","autocomplete","_vModelText","_createVNode","ref","siteKey","size","onExpire","theme","onFail","onVerify","disabled","_createElementBlock","name","classes","_createCommentVNode","components","AuthLayout","vueRecaptcha","JButton","Icon","setup","http","inject","toast","translate","store","useStore","router","useRouter","validate","showError","validator","state","reactive","reCaptchaAPIKey","process","form","reCaptcha","output","errorBag","rules","messages","required","isProcessing","mode","computed","isLoggedIn","watch","newVal","oldVal","Object","keys","length","apiBaseUrl","recaptchaVerified","response","recaptchaExpired","value","reset","recaptchaFailed","submit","payload","assign","get","params","then","status","data","status_code","error","reason","success","push","catch","onBeforeMount","route","currentRoute","toRefs","__exports__"],"sourceRoot":""}