{"version":3,"sources":["webpack:///./src/views/ForgotPassword.vue","webpack:///./src/views/ForgotPassword.vue?90d5"],"names":["class","_createBlock","_component_auth_layout","_createElementVNode","_hoisted_1","_hoisted_2","$setup","onSubmit","_hoisted_3","_hoisted_4","_hoisted_5","_ctx","type","autofocus","User","autocomplete","_createVNode","_component_vue_recaptcha","ref","siteKey","size","onExpire","theme","onFail","onVerify","_hoisted_6","_hoisted_7","_component_j_button","disabled","_createElementBlock","_hoisted_8","_component_icon","name","classes","components","AuthLayout","vueRecaptcha","JButton","Icon","setup","http","inject","toast","translate","store","useStore","router","useRouter","validate","showError","validator","state","reactive","reCaptchaAPIKey","process","form","reCaptcha","output","errorBag","rules","messages","required","isProcessing","mode","computed","isLoggedIn","watch","newVal","oldVal","Object","keys","length","apiBaseUrl","recaptchaVerified","response","recaptchaExpired","value","reset","recaptchaFailed","submit","payload","assign","get","params","then","status","data","status_code","error","reason","success","push","catch","onBeforeMount","route","currentRoute","toRefs","__exports__","render"],"mappings":"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","file":"assets/js/recover-password.8dfa0c7e.js","sourcesContent":["<template>\r\n  <auth-layout>\r\n    <div class=\"max-w-xl w-full space-y-4 rounded bg-white dark:bg-gray-800 dark:text-gray-400 shadow p-4\">\r\n      <h1 class=\"text-xl font-bold mb-4 text-center\">{{ translate('login.recover') }}</h1>\r\n      <form @submit.prevent=\"submit()\">\r\n        <div class=\"mb-2\">\r\n          <div class=\"flex items-center justify-between mb-1\">\r\n            <label>{{ translate('login.username') }}</label>\r\n            <div class=\"text-blue-500 text-sm\">{{ showError(errorBag, 'User') }}</div>\r\n          </div>\r\n          <input type=\"text\" autofocus v-model=\"form.User\" class=\"form-input w-full\" autocomplete=\"off\"/>\r\n        </div>\r\n        <div>\r\n          <vue-recaptcha ref=\"vueRecaptcha\" :siteKey=\"reCaptchaAPIKey\"\r\n                         size=\"normal\" @expire=\"recaptchaExpired\" :theme=\"mode\"\r\n                         @fail=\"recaptchaFailed\" @verify=\"recaptchaVerified\">\r\n          </vue-recaptcha>\r\n          <div class=\"text-red-500 text-sm\">{{ showError(errorBag, 'reCaptcha') }}</div>\r\n        </div>\r\n\r\n        <div class=\"mt-4\">\r\n          <j-button :disabled=\"isProcessing\" size=\"w-full\">\r\n            <div v-if=\"isProcessing\" class=\"mr-3\">\r\n              <icon :name=\"'spinner'\" classes=\"w-4 h-4 text-white\"></icon>\r\n            </div>\r\n            <span>{{ translate('login.recover') }}</span>\r\n          </j-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </auth-layout>\r\n</template>\r\n\r\n<script>\r\nimport AuthLayout from '@/components/layouts/AuthLayout'\r\nimport vueRecaptcha from 'vue3-recaptcha2'\r\nimport JButton from '@/templates/Button'\r\nimport Icon from '@/components/Icon'\r\nimport { computed, inject, onBeforeMount, reactive, ref, toRefs, watch } from 'vue'\r\nimport validator from '@/validator'\r\nimport { useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default {\r\n  name: 'ForgotPassword',\r\n  components: {\r\n    AuthLayout,\r\n    vueRecaptcha,\r\n    JButton,\r\n    Icon\r\n  },\r\n  setup () {\r\n    const vueRecaptcha = ref(null)\r\n\r\n    // Provides\r\n    const http = inject('http')\r\n    const toast = inject('toast')\r\n    const translate = inject('translate')\r\n    // Store\r\n    const store = useStore()\r\n    // Router\r\n    const router = useRouter()\r\n\r\n    const {\r\n      validate,\r\n      showError\r\n    } = validator()\r\n\r\n    const state = reactive({\r\n      reCaptchaAPIKey: process.env.VUE_APP_GOOGLE_reCAPTCHA_SITE_KEY,\r\n      form: {\r\n        User: '',\r\n        reCaptcha: '',\r\n        output: 'json'\r\n      },\r\n      errorBag: {},\r\n      rules: {\r\n        User: ['required'],\r\n        reCaptcha: ['required']\r\n      },\r\n      messages: {\r\n        User: {\r\n          required: 'Username is required'\r\n        },\r\n        reCaptcha: {\r\n          required: 'Verify you are not a robot'\r\n        }\r\n      },\r\n      isProcessing: false\r\n    })\r\n\r\n    // Computed\r\n    const mode = computed(() => store.state.mode)\r\n    const isLoggedIn = computed(() => store.state.isLoggedIn)\r\n\r\n    // Watch\r\n    watch(() => ({ ...state.form }),\r\n      (newVal, oldVal) => {\r\n        if (Object.keys(state.errorBag).length > 0) {\r\n          state.errorBag = validate(state.form, state.rules, state.messages)\r\n        }\r\n      })\r\n\r\n    // Methods\r\n    const apiBaseUrl = process.env.VUE_APP_API_URL\r\n    const recaptchaVerified = (response) => {\r\n      state.form.reCaptcha = response\r\n    }\r\n    const recaptchaExpired = () => {\r\n      vueRecaptcha.value.reset()\r\n      state.form.reCaptcha = ''\r\n    }\r\n    const recaptchaFailed = () => {\r\n    }\r\n    const submit = () => {\r\n      state.errorBag = validate(state.form, state.rules, state.messages)\r\n      if (Object.keys(state.errorBag).length === 0) {\r\n        state.isProcessing = true\r\n        let payload = state.form\r\n        payload = Object.assign(payload, {\r\n          'g-recaptcha-response': payload.reCaptcha\r\n        })\r\n        delete payload.reCaptcha\r\n\r\n        http.get(`${apiBaseUrl}/RecoverPassword`, {\r\n          params: payload\r\n        }).then(response => {\r\n          state.isProcessing = false\r\n          if (response.status === 200) {\r\n            if (response.data.status_code === 400) {\r\n              toast.error(response.data.reason)\r\n            } else {\r\n              // Reset google reCaptcha\r\n              toast.success(response.data.data[0])\r\n              // Redirect\r\n              router.push('/login')\r\n            }\r\n          }\r\n        }).catch(error => {\r\n          state.isProcessing = false\r\n          if (error.response) {\r\n            toast.error(error.response.data)\r\n          } else if (error.data && error.data.reason) {\r\n            toast.error(error.data.reason)\r\n          }\r\n          vueRecaptcha.value.reset()\r\n          state.form.reCaptcha = ''\r\n        })\r\n      }\r\n    }\r\n\r\n    onBeforeMount(() => {\r\n      if (isLoggedIn.value) {\r\n        const route = store.state.currentRoute\r\n        router.push(route)\r\n      }\r\n    })\r\n\r\n    return {\r\n      translate,\r\n      ...toRefs(state),\r\n      vueRecaptcha,\r\n      showError,\r\n      mode,\r\n      recaptchaVerified,\r\n      recaptchaExpired,\r\n      recaptchaFailed,\r\n      submit\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import { render } from \"./ForgotPassword.vue?vue&type=template&id=d76876a6\"\nimport script from \"./ForgotPassword.vue?vue&type=script&lang=js\"\nexport * from \"./ForgotPassword.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\zeesh\\\\OneDrive\\\\Desktop\\\\Cointopay\\\\cointopay.com.frontend.vuejs3.paymentfocus\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}